// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1beta1

import (
	unsafe "unsafe"

	seratos "github.com/Marcos30004347/seratos-api/pkg/apis/seratos"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Foo)(nil), (*seratos.Foo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_Foo_To_seratos_Foo(a.(*Foo), b.(*seratos.Foo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seratos.Foo)(nil), (*Foo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seratos_Foo_To_v1beta1_Foo(a.(*seratos.Foo), b.(*Foo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FooList)(nil), (*seratos.FooList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FooList_To_seratos_FooList(a.(*FooList), b.(*seratos.FooList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seratos.FooList)(nil), (*FooList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seratos_FooList_To_v1beta1_FooList(a.(*seratos.FooList), b.(*FooList), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_Foo_To_seratos_Foo(in *Foo, out *seratos.Foo, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	return nil
}

// Convert_v1beta1_Foo_To_seratos_Foo is an autogenerated conversion function.
func Convert_v1beta1_Foo_To_seratos_Foo(in *Foo, out *seratos.Foo, s conversion.Scope) error {
	return autoConvert_v1beta1_Foo_To_seratos_Foo(in, out, s)
}

func autoConvert_seratos_Foo_To_v1beta1_Foo(in *seratos.Foo, out *Foo, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	return nil
}

// Convert_seratos_Foo_To_v1beta1_Foo is an autogenerated conversion function.
func Convert_seratos_Foo_To_v1beta1_Foo(in *seratos.Foo, out *Foo, s conversion.Scope) error {
	return autoConvert_seratos_Foo_To_v1beta1_Foo(in, out, s)
}

func autoConvert_v1beta1_FooList_To_seratos_FooList(in *FooList, out *seratos.FooList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]seratos.Foo)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1beta1_FooList_To_seratos_FooList is an autogenerated conversion function.
func Convert_v1beta1_FooList_To_seratos_FooList(in *FooList, out *seratos.FooList, s conversion.Scope) error {
	return autoConvert_v1beta1_FooList_To_seratos_FooList(in, out, s)
}

func autoConvert_seratos_FooList_To_v1beta1_FooList(in *seratos.FooList, out *FooList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]Foo)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_seratos_FooList_To_v1beta1_FooList is an autogenerated conversion function.
func Convert_seratos_FooList_To_v1beta1_FooList(in *seratos.FooList, out *FooList, s conversion.Scope) error {
	return autoConvert_seratos_FooList_To_v1beta1_FooList(in, out, s)
}
